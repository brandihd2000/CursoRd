// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Model;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(CursosDbContext))]
    [Migration("20180402000703_ComentarioColor")]
    partial class ComentarioColor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.AlumnosPorCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completado");

                    b.Property<int>("CursoId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("AlumnosPorCurso");
                });

            modelBuilder.Entity("Model.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icon");

                    b.Property<string>("Nombre");

                    b.Property<string>("Slug");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Model.CategoriaCurso", b =>
                {
                    b.Property<int>("CategoriaId");

                    b.Property<int>("CursoId");

                    b.HasKey("CategoriaId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("CategoriaCurso");
                });

            modelBuilder.Entity("Model.ComentariosCursos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<int>("CursoId");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Foto");

                    b.Property<string>("NombreAutor");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("ComentariosCursos");
                });

            modelBuilder.Entity("Model.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Imagen");

                    b.Property<string>("Nombre");

                    b.Property<decimal>("Votos");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Model.Ingresos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EntidadId");

                    b.Property<int>("PagoCurso");

                    b.Property<int>("TipoIngreso");

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Model.LeccionesAprendidasPorUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LeccionId");

                    b.HasKey("Id");

                    b.HasIndex("LeccionId");

                    b.ToTable("LeccionesAprendidasPorUsuario");
                });

            modelBuilder.Entity("Model.LeccionPorCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contenido");

                    b.Property<int>("CursoId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Video");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("LeccionPorCurso");
                });

            modelBuilder.Entity("Model.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apellidos");

                    b.Property<string>("correo");

                    b.Property<string>("foto");

                    b.Property<string>("nombre");

                    b.Property<string>("password");

                    b.Property<string>("tipousuario");

                    b.Property<string>("username");

                    b.HasKey("Id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Model.RevisionCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comentario");

                    b.Property<int>("CursoId");

                    b.Property<decimal>("Voto");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("RevisionCurso");
                });

            modelBuilder.Entity("Model.AlumnosPorCurso", b =>
                {
                    b.HasOne("Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.CategoriaCurso", b =>
                {
                    b.HasOne("Model.Categoria", "categoria")
                        .WithMany("CategoriaCurso")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Curso", "curso")
                        .WithMany("CategoriaCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.ComentariosCursos", b =>
                {
                    b.HasOne("Model.Curso", "curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.LeccionesAprendidasPorUsuario", b =>
                {
                    b.HasOne("Model.LeccionPorCurso", "leccion")
                        .WithMany()
                        .HasForeignKey("LeccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.LeccionPorCurso", b =>
                {
                    b.HasOne("Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.RevisionCurso", b =>
                {
                    b.HasOne("Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
